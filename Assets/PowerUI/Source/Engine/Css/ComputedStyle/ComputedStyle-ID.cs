//--------------------------------------//               PowerUI////        For documentation or //    if you have any issues, visit//        powerUI.kulestar.com////    Copyright © 2013 Kulestar Ltd//          www.kulestar.com//--------------------------------------using System;using UnityEngine;using System.Collections;using System.Collections.Generic;namespace PowerUI.Css{	/// <summary>	/// Contains methods for interacting with a CSS class applied to the computed style.	/// </summary>	public partial class ComputedStyle{						/// <summary>This is called to change a property defined by a css selector that matches the ID of this element.		/// This change may be rejected if a style attribute on the element overrides this change.</summary>		/// <param name="cssProperty">The css property being changed.</param>		/// <param name="newValue">The new property value.</param>		public void ChangeIDProperty(string cssProperty,Css.Value newValue){						// Resolve the property:			CssProperty property=CssProperties.Get(cssProperty);						if(property==null){				return;			}						// Apply now:			ChangeIDProperty(property,newValue);					}				/// <summary>This is called to change a property defined by a css selector that matches the ID of this element.		/// This change may be rejected if a style attribute on the element overrides this change.</summary>		/// <param name="property">The css property being changed.</param>		/// <param name="newValue">The new property value.</param>		public void ChangeIDProperty(CssProperty property,Css.Value newValue){			// Is it overriden by any local style properties?			// If so, stop.						// Grab the local style:			Css.Value localStyle=Element.style[property];						if(localStyle!=null){				if(newValue==null || !newValue.Important || localStyle.Important){					return;				}			}						// Not overriden by the style="" attribute. Act like we set it directly.			ChangeProperty(property,newValue);		}				/// <summary>Gets the CSS property value defined by the ID selector for the given property.</summary>		/// <param name="property">The CSS property to get the value for.</param>		public Css.Value GetIDStyle(CssProperty property){						if(!string.IsNullOrEmpty(IDSelector)){				SelectorStyle idStyle=Element.Document.getStyleBySelector(IDSelector);								if(idStyle!=null){					return idStyle[property];				}			}						return null;		}				/// <summary>Gets the CSS property value defined by the ID selector for the given property.</summary>		/// <param name="property">The CSS property to get the value for.</param>		public Css.Value GetIDStyle(string property){						if(!string.IsNullOrEmpty(IDSelector)){				SelectorStyle idStyle=Element.Document.getStyleBySelector(IDSelector);								if(idStyle!=null){					return idStyle[property];				}			}						return null;		}			}	}