//--------------------------------------//         Nitro Script Engine//          Wrench Framework////        For documentation or //    if you have any issues, visit//         nitro.kulestar.com////    Copyright © 2013 Kulestar Ltd//          www.kulestar.com//--------------------------------------using System;using System.Reflection;using System.Collections;using System.Collections.Generic;	namespace Nitro{	/// <summary>	/// Compiles dynamic method calls in code into actual calls.	/// </summary>	public class DynamicMethodCompiler{				/// <summary>DynamicMethods are generic objects which know their return type.		/// This method creates a new DynamicMethod type with the given return type.</summary>		/// <param name="methodReturnType">The return type of the dynamic method.</param>		/// <returns>A DynamicMethod<methodReturnType> type.</returns>		public static Type TypeFor(Type methodReturnType){			return typeof(DynamicMethod<>).MakeGenericType(methodReturnType);		}				/// <summary>Compiles a dynamic method call in code into an actual dynamic method call.</summary>		/// <param name="function">The function this call is being compiled within.</param>		/// <param name="methodName">The name of the method to call.</param>		/// <param name="methodReturnType">The return type of the method that will be called.</param>		/// <param name="target">The object that the method will be run on.</param>		/// <returns>A compiled dynamic method object.</returns>		public static CompiledFragment Compile(CompiledMethod function,string methodName,Type methodReturnType,CompiledFragment target){			return new ConstructOperation(function,TypeFor(methodReturnType),new CompiledFragment(methodName),target);		}			}	}