<?xml version="1.0"?>
<doc>
    <assembly>
        <name>yIRC</name>
    </assembly>
    <members>
        <member name="T:yIRC.Priority">
            <summary>
            Message priority
            </summary>
        </member>
        <member name="F:yIRC.Priority.Low">
            <summary>
            Low priority value
            </summary>
        </member>
        <member name="F:yIRC.Priority.BelowMedium">
            <summary>
            Bellow medium priority value
            </summary>
        </member>
        <member name="F:yIRC.Priority.Medium">
            <summary>
            Medium priority value
            </summary>
        </member>
        <member name="F:yIRC.Priority.AboveMedium">
            <summary>
            Above medium priority value
            </summary>
        </member>
        <member name="F:yIRC.Priority.High">
            <summary>
            High priority value
            </summary>        
        </member>
        <member name="F:yIRC.Priority.Critical">
            <summary>
            Crirical priority value
            </summary>        
        </member>
        <member name="T:yIRC.SendType">
            <summary>
            Sending message type
            </summary>
        </member>
        <member name="F:yIRC.SendType.Message">
            <summary>
            Simple message
            </summary>
        </member>
        <member name="F:yIRC.SendType.Action">
            <summary>
            Channel / Server action
            </summary>
        </member>
        <member name="F:yIRC.SendType.Notice">
            <summary>
            Notice
            </summary>
        </member>
        <member name="F:yIRC.SendType.CtcpReply">
            <summary>
            Internal message
            </summary>
        </member>
        <member name="F:yIRC.SendType.CtcpRequest">
            <summary>
            Internal message
            </summary>
        </member>
        <member name="T:yIRC.ReceiveType">
            <summary>
            Received message type
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Info">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Login">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Motd">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.List">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Join">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Kick">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Part">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Invite">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Quit">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Who">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.WhoIs">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.WhoWas">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Topic">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.BanList">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.NickChange">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.TopicChange">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.UserMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.UserModeChange">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.ChannelMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.ChannelModeChange">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.ChannelMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.ChannelAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.ChannelNotice">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.QueryMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.QueryAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.QueryNotice">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.CtcpReply">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.CtcpRequest">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Error">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.ErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReceiveType.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.ReplyCode">
            <summary>
            Internal codes
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Null">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Welcome">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.YourHost">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Created">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.MyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Bounce">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceLink">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceConnecting">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceHandshake">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceUnknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceOperator">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceUser">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceServer">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceService">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceNewType">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceClass">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceReconnect">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.StatsLinkInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.StatsCommands">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.EndOfStats">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.UserModeIs">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ServiceList">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ServiceListEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.StatsUptime">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.StatsOLine">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.LuserClient">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.LuserOp">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.LuserUnknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.LuserChannels">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.LuserMe">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.AdminMe">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.AdminLocation1">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.AdminLocation2">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.AdminEmail">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceLog">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TraceEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.TryAgain">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Away">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.UserHost">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.IsOn">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.UnAway">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.NowAway">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.WhoIsUser">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.WhoIsServer">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.WhoIsOperator">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.WhoWasUser">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.EndOfWho">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.WhoIsIdle">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.EndOfWhoIs">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.WhoIsChannels">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ListStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.List">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ListEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ChannelModeIs">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.UniqueOpIs">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.NoTopic">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Topic">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Inviting">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Summoning">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.InviteList">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.EndOfInviteList">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ExceptionList">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.EndOfExceptionList">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Version">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.WhoReply">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.NamesReply">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Links">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.EndOfLinks">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.EndOfNames">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.BanList">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.EndOfBanList">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.EndOfWhoWas">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Info">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Motd">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.EndOfInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.MotdStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.EndOfMotd">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.YouAreOper">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Rehashing">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.YouAreService">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Time">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.UsersStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.Users">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.EndOfUsers">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.NoUsers">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoSuchNickname">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoSuchServer">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoSuchChannel">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorCannotSendToChannel">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorTooManyChannels">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorWasNoSuchNickname">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorTooManyTargets">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoSuchService">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoOrigin">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoRecipient">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoTextToSend">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoTopLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorWildTopLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorBadMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorUnknownCommand">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoMotd">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoAdminInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorFileError">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoNicknameGiven">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorErroneusNickname">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNicknameInUse">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNicknameCollision">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorUnavailableResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorUserNotInChannel">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNotOnChannel">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorUserOnChannel">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoLogin">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorSummonDisabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorUsersDisabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNotRegistered">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNeedMoreParams">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorAlreadyRegistered">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoPermissionForHost">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorPasswordMismatch">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorYouAreBannedCreep">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorYouWillBeBanned">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorKeySet">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorChannelIsFull">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorUnknownMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorInviteOnlyChannel">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorBannedFromChannel">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorBadChannelKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorBadChannelMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoChannelModes">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorBanListFull">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoPrivileges">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorChannelOpPrivilegesNeeded">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorCannotKillServer">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorRestricted">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorUniqueOpPrivilegesNeeded">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorNoOperHost">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorUserModeUnknownFlag">
            <summary>
            
            </summary>
        </member>
        <member name="F:yIRC.ReplyCode.ErrorUsersDoNotMatch">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.IrcEventArgs">
             <summary>
            
             </summary>
             <threadsafety static="true" instance="true" />
        </member>
        <member name="P:yIRC.IrcEventArgs.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.yIRCException">
            <threadsafety static="true" instance="true" />
        </member>
        <member name="M:yIRC.yIRCException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.yIRCException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:yIRC.yIRCException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.ConnectionException">
            <threadsafety static="true" instance="true" />
        </member>
        <member name="M:yIRC.ConnectionException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.ConnectionException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:yIRC.ConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.CouldNotConnectException">
            <threadsafety static="true" instance="true" />
        </member>
        <member name="M:yIRC.CouldNotConnectException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.CouldNotConnectException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:yIRC.CouldNotConnectException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.NotConnectedException">
            <threadsafety static="true" instance="true" />
        </member>
        <member name="M:yIRC.NotConnectedException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.NotConnectedException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:yIRC.NotConnectedException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.AlreadyConnectedException">
            <threadsafety static="true" instance="true" />
        </member>
        <member name="M:yIRC.AlreadyConnectedException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.AlreadyConnectedException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:yIRC.AlreadyConnectedException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.BanInfo">
            <summary>
            This class manages the ban information within a channel.
            </summary>
        </member>
        <member name="M:yIRC.BanInfo.Parse(yIRC.IrcMessageData)">
            <summary>
            Parses ban information from the message data
            </summary>
            <param name="data">Message data to be parsed</param>
            <returns>Ban information</returns>
        </member>
        <member name="P:yIRC.BanInfo.Channel">
            <summary>
            Channel name
            </summary>
        </member>
        <member name="P:yIRC.BanInfo.Mask">
            <summary>
            Ban mask
            </summary>
        </member>
        <member name="T:yIRC.Channel">
            <summary>
            
            </summary>
            <threadsafety static="true" instance="true" />
        </member>
        <member name="M:yIRC.Channel.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"> </param>
        </member>
        <member name="M:yIRC.Channel.AddUser(System.String,yIRC.ChannelUser)">
            <summary>
            Add new user to the channel.
            </summary>
            <param name="userName">User's nickname</param>
            <param name="user">User information</param>
        </member>
        <member name="M:yIRC.Channel.HaveUser(System.String)">
            <summary>
            Check if the given user is persistant at this channel
            </summary>
            <param name="userName">Username to check</param>
            <returns>True if user is at the channel</returns>
        </member>
        <member name="M:yIRC.Channel.GetUser(System.String)">
            <summary>
            Returns extended user information including channel information
            </summary>
            <param name="userName">The users 'nick' name which may NOT contain spaces</param>
            <returns>ChannelUser object of requested nickname or null if no user found</returns>
        </member>
        <member name="M:yIRC.Channel.RemoveUser(System.String)">
            <summary>
            Remove user from channel's users list
            </summary>
            <param name="userName">User's nickname. May NOT contain spaces</param>
        </member>
        <member name="M:yIRC.Channel.AddOp(System.String,yIRC.ChannelUser)">
            <summary>
            Add new operator into channel's operators list.
            </summary>
            <param name="userName">User's nickname</param>
            <param name="user">User information</param>
        </member>
        <member name="M:yIRC.Channel.RemoveOp(System.String)">
            <summary>
            Remove user from channel's operators list
            </summary>
            <param name="userName">User's nickname. May NOT contain spaces</param>
        </member>
        <member name="M:yIRC.Channel.AddVoice(System.String,yIRC.ChannelUser)">
            <summary>
            Add new voice into channel's operators list.
            </summary>
            <param name="userName">User's nickname</param>
            <param name="user">User information</param>
        </member>
        <member name="M:yIRC.Channel.RemoveVoice(System.String)">
            <summary>
            Remove user from channel's voices list
            </summary>
            <param name="userName">User's nickname. May NOT contain spaces</param>
        </member>
        <member name="M:yIRC.Channel.RemoveFromChannel(System.String)">
            <summary>
            Remove user from this channel's lists
            </summary>
            <param name="userName">User's nickname. May NOT contain spaces</param>
        </member>
        <member name="P:yIRC.Channel.Name">
            <summary>
            
            </summary>
            <value> </value>
        </member>
        <member name="P:yIRC.Channel.Key">
            <summary>
            
            </summary>
            <value> </value>
        </member>
        <member name="P:yIRC.Channel.Users">
            <summary>
            Get list of users
            </summary>
        </member>
        <member name="P:yIRC.Channel.Ops">
            <summary>
            Get list of operators
            </summary>
        </member>
        <member name="P:yIRC.Channel.Voices">
            <summary>
            Get list of voices
            </summary>
        </member>
        <member name="P:yIRC.Channel.Bans">
            <summary>
            
            </summary>
            <value> </value>
        </member>
        <member name="P:yIRC.Channel.Topic">
            <summary>
            
            </summary>
            <value> </value>
        </member>
        <member name="P:yIRC.Channel.UserLimit">
            <summary>
            
            </summary>
            <value> </value>
        </member>
        <member name="P:yIRC.Channel.Mode">
            <summary>
            
            </summary>
            <value> </value>
        </member>
        <member name="P:yIRC.Channel.ActiveSyncStart">
            <summary>
            
            </summary>
            <value> </value>
        </member>
        <member name="P:yIRC.Channel.ActiveSyncStop">
            <summary>
            
            </summary>
            <value> </value>
        </member>
        <member name="P:yIRC.Channel.ActiveSyncTime">
            <summary>
            
            </summary>
            <value> </value>
        </member>
        <member name="P:yIRC.Channel.IsSycned">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.ChannelInfo">
            <summary>
            Contains information about channel
            </summary>
        </member>
        <member name="P:yIRC.ChannelInfo.Channel">
            <summary>
            Channel name
            </summary>
        </member>
        <member name="P:yIRC.ChannelInfo.UserCount">
            <summary>
            Current users count
            </summary>
        </member>
        <member name="P:yIRC.ChannelInfo.Topic">
            <summary>
            Current topic
            </summary>
        </member>
        <member name="T:yIRC.ChannelUser">
            <summary>
            This class manages the information of a user within a channel.
            </summary>
            <remarks>
            only used with channel sync
            </remarks>
            <threadsafety static="true" instance="true" />
        </member>
        <member name="M:yIRC.ChannelUser.#ctor(System.String,yIRC.IrcUser)">
            <summary>
            
            </summary>
            <param name="channel"> </param>
            <param name="ircuser"> </param>
        </member>
        <member name="P:yIRC.ChannelUser.Channel">
            <summary>
            Gets the channel name
            </summary>
        </member>
        <member name="P:yIRC.ChannelUser.IsIrcOp">
            <summary>
            Gets the server operator status of the user
            </summary>
        </member>
        <member name="P:yIRC.ChannelUser.IsOp">
            <summary>
            Gets or sets the op flag of the user (+o)
            </summary>
            <remarks>
            only used with channel sync
            </remarks>
        </member>
        <member name="P:yIRC.ChannelUser.IsVoice">
            <summary>
            Gets or sets the voice flag of the user (+v)
            </summary>
            <remarks>
            only used with channel sync
            </remarks>
        </member>
        <member name="P:yIRC.ChannelUser.IsAway">
            <summary>
            Gets the away status of the user
            </summary>
        </member>
        <member name="P:yIRC.ChannelUser.IrcUser">
            <summary>
            Gets the underlaying IrcUser object
            </summary>
        </member>
        <member name="P:yIRC.ChannelUser.Nick">
            <summary>
            Gets the nickname of the user
            </summary>
        </member>
        <member name="P:yIRC.ChannelUser.Ident">
            <summary>
            Gets the identity (username) of the user, which is used by some IRC networks for authentication.
            </summary>
        </member>
        <member name="P:yIRC.ChannelUser.Host">
            <summary>
            Gets the hostname of the user,
            </summary>
        </member>
        <member name="P:yIRC.ChannelUser.Realname">
            <summary>
            Gets the supposed real name of the user.
            </summary>
        </member>
        <member name="P:yIRC.ChannelUser.Server">
            <summary>
            Gets the server the user is connected to.
            </summary>
            <value> </value>
        </member>
        <member name="P:yIRC.ChannelUser.HopCount">
            <summary>
            Gets or sets the count of hops between you and the user's server
            </summary>
        </member>
        <member name="P:yIRC.ChannelUser.JoinedChannels">
            <summary>
            Gets the list of channels the user has joined
            </summary>
        </member>
        <member name="T:yIRC.IrcEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.CtcpEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.ActionEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.ErrorEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.PingEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.KickEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.JoinEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.NamesEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.ListEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.PartEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.InviteEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.OpEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.DeopEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.VoiceEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.DevoiceEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.BanEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.UnbanEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.TopicEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.TopicChangeEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.NickChangeEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.QuitEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.AwayEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.WhoEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.MotdEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.PongEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.ActionEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="T:yIRC.CtcpEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="M:yIRC.CtcpEventArgs.#ctor(yIRC.IrcMessageData,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="ctcpcmd"></param>
            <param name="ctcpparam"></param>
        </member>
        <member name="P:yIRC.CtcpEventArgs.CtcpCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.CtcpEventArgs.CtcpParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.ActionEventArgs.ActionMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.ErrorEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="M:yIRC.ErrorEventArgs.#ctor(yIRC.IrcMessageData,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="errormsg"></param>
        </member>
        <member name="P:yIRC.ErrorEventArgs.ErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.MotdEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="M:yIRC.MotdEventArgs.#ctor(yIRC.IrcMessageData,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="motdmsg"></param>
        </member>
        <member name="P:yIRC.MotdEventArgs.MotdMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.PingEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.PingEventArgs.PingData">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.PongEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.PongEventArgs.Lag">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.KickEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.KickEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.KickEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.KickEventArgs.Whom">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.KickEventArgs.KickReason">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.JoinEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.JoinEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.JoinEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.NamesEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.NamesEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.NamesEventArgs.UserList">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.ListEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.ListEventArgs.ListInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.InviteEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.InviteEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.InviteEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.PartEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.PartEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.PartEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.PartEventArgs.PartMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.WhoEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.WhoEventArgs.WhoInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.QuitEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.QuitEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.QuitEventArgs.QuitMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.AwayEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.AwayEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.AwayEventArgs.AwayMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.NickChangeEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.NickChangeEventArgs.OldNickname">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.NickChangeEventArgs.NewNickname">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.TopicEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="M:yIRC.TopicEventArgs.#ctor(yIRC.IrcMessageData,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="channel"></param>
            <param name="topic"></param>
        </member>
        <member name="P:yIRC.TopicEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.TopicEventArgs.Topic">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.TopicChangeEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.TopicChangeEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.TopicChangeEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.TopicChangeEventArgs.NewTopic">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.BanEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.BanEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.BanEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.BanEventArgs.Hostmask">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.UnbanEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.UnbanEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.UnbanEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.UnbanEventArgs.Hostmask">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.OpEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.OpEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.OpEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.OpEventArgs.Whom">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.DeopEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.DeopEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.DeopEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.DeopEventArgs.Whom">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.VoiceEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.VoiceEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.VoiceEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.VoiceEventArgs.Whom">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.DevoiceEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.DevoiceEventArgs.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.DevoiceEventArgs.Who">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.DevoiceEventArgs.Whom">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.IrcClient">
            <summary>
            This layer is an event driven high-level API with all features you could need for IRC programming.
            </summary>
            <threadsafety static="true" instance="true" />
        </member>
        <member name="T:yIRC.IrcCommands">
            <summary>
            
            </summary>
            <threadsafety static="true" instance="true" />
        </member>
        <member name="T:yIRC.IrcConnection">
            <summary>
            This class manages the network connection and client-server interaction.
            </summary>
            <threadsafety static="true" instance="true" />
        </member>
        <member name="M:yIRC.IrcConnection.#ctor">
            <summary>
            Initializes the message queues, read and write thread
            </summary>
        </member>
        <member name="M:yIRC.IrcConnection.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcConnection.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:yIRC.IrcConnection.Connect(System.String[],System.Int32)">
            <overloads>this method has 2 overloads</overloads>
            <summary>
            Connects to the specified server and port, when the connection fails
            the next server in the list will be used.
            </summary>
            <param name="addresslist">List of servers to connect to</param>
            <param name="port">Port number to connect to</param>
            <exception cref="T:yIRC.CouldNotConnectException">The connection failed</exception>
            <exception cref="T:yIRC.AlreadyConnectedException">If there is already an active connection</exception>
        </member>
        <member name="M:yIRC.IrcConnection.Connect(System.String,System.Int32)">
            <summary>
            Connects to the specified server and port.
            </summary>
            <param name="address">Server address to connect to</param>
            <param name="port">Port number to connect to</param>
        </member>
        <member name="M:yIRC.IrcConnection.Reconnect">
            <summary>
            Reconnects to the server
            </summary>
            <exception cref="T:yIRC.NotConnectedException">
            If there was no active connection
            </exception>
            <exception cref="T:yIRC.CouldNotConnectException">
            The connection failed
            </exception>
            <exception cref="T:yIRC.AlreadyConnectedException">
            If there is already an active connection
            </exception>
        </member>
        <member name="M:yIRC.IrcConnection.Disconnect">
            <summary>
            Disconnects from the server
            </summary>
            <exception cref="T:yIRC.NotConnectedException">
            If there was no active connection
            </exception>
        </member>
        <member name="M:yIRC.IrcConnection.Listen(System.Boolean)">
            <summary>
            Go into a receive mode, all events
            will be triggered by current thread 
            Listen() blocks by default, you can also use ListenOnce() if you need 
            that does one IRC operation and then returns, so you need an own loop 
            </summary>
            <param name="blocking">If true blocks untill disconnect, otherwise as long as receive messages</param>
        </member>
        <member name="M:yIRC.IrcConnection.Listen">
            <summary>
            Go into a receive mode, all events  will be triggered by current thread 
            Listen() blocks untill disconnect
            </summary>
        </member>
        <member name="M:yIRC.IrcConnection.ListenOnce(System.Boolean)">
            <summary>
            Does one IRC operation and then returns
            </summary>
            <param name="blocking">If true blocks untill a message received, otherwise only tries to read line and returns</param>
        </member>
        <member name="M:yIRC.IrcConnection.ListenOnce">
            <summary>
            Does one IRC operation and then returns
            </summary>
        </member>
        <member name="M:yIRC.IrcConnection.ReadLine(System.Boolean)">
            <summary>
            Reads one line from the reading thread
            </summary>
            <param name="blocking">Block untill message received</param>
            <returns>Message</returns>
        </member>
        <member name="M:yIRC.IrcConnection.WriteLine(System.String,yIRC.Priority)">
            <summary>
            Write a message in to the output buffer
            </summary>
            <param name="data">Message to be written</param>
            <param name="priority">Priority value</param>
        </member>
        <member name="M:yIRC.IrcConnection.WriteLine(System.String)">
            <summary>
            Write a message in to the output buffer
            </summary>
            <param name="data">Message to be written</param>
        </member>
        <member name="E:yIRC.IrcConnection.OnReadLine">
            <event cref="E:yIRC.IrcConnection.OnReadLine">
            Raised when a terminated line is read from the socket
            </event>
        </member>
        <member name="E:yIRC.IrcConnection.OnWriteLine">
            <event cref="E:yIRC.IrcConnection.OnWriteLine">
            Raised when a terminated line is written to the socket
            </event>        
        </member>
        <member name="E:yIRC.IrcConnection.OnConnecting">
            <event cref="E:yIRC.IrcConnection.OnConnecting">
            Raised before the connect attempt
            </event>
        </member>
        <member name="E:yIRC.IrcConnection.OnConnected">
            <event cref="E:yIRC.IrcConnection.OnConnected">
            Raised on successful connect
            </event>
        </member>
        <member name="E:yIRC.IrcConnection.OnDisconnecting">
            <event cref="E:yIRC.IrcConnection.OnDisconnecting">
            Raised before the connection is closed
            </event>
        </member>
        <member name="E:yIRC.IrcConnection.OnDisconnected">
            <event cref="E:yIRC.IrcConnection.OnDisconnected">
            Raised when the connection is closed
            </event>
        </member>
        <member name="E:yIRC.IrcConnection.OnConnectionError">
            <event cref="E:yIRC.IrcConnection.OnConnectionError">
            Raised when the connection got into an error state
            </event>
        </member>
        <member name="E:yIRC.IrcConnection.OnAutoConnectError">
            <event cref="T:yIRC.AutoConnectErrorEventHandler">
            Raised when the connection got into an error state during auto connect loop
            </event>
        </member>
        <member name="P:yIRC.IrcConnection.IsConnectionError">
            <summary>
            When a connection error is detected this property will return true
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.IsDisconnecting">
            <summary>
            When disconnection this property will return true
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.Address">
            <summary>
            Gets the current address of the connection
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.AddressList">
            <summary>
            Gets the address list of the connection
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.Port">
            <summary>
            Gets the used port of the connection
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.AutoReconnect">
            <summary>
            By default nothing is done when the library looses the connection
            to the server.
            Default: false        
            </summary>
            <value>
            true, if the library should reconnect on lost connections
            false, if the library should not take care of it
            </value>
        </member>
        <member name="P:yIRC.IrcConnection.AutoRetry">
            <summary>
            Should the library retry to connect when the connection fails.
            Default: false
            </summary>
            <value>
            true, if the library should retry to connect
            false, if the library should not retry
            </value>
        </member>
        <member name="P:yIRC.IrcConnection.AutoRetryDelay">
            <summary>
            Delay between retry attempts in Connect() in seconds.
            Default: 30
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.SendDelay">
            <summary>
            To prevent flooding the IRC server, it's required to delay each
            message, given in milliseconds.
            Default: 200
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.IsRegistered">
            <summary>
            On successful registration on the IRC network, this is set to true.
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.IsConnected">
            <summary>
            On successful connect to the IRC server, this is set to true.
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.VersionNumber">
            <summary>
            Gets the yIRC version number
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.VersionString">
            <summary>
            Gets the full yIRC version string
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.Encoding">
            <summary>
            Encoding which is used for reading and writing to the socket
            Default: encoding of the system
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.SocketReceiveTimeout">
            <summary>
            Timeout in seconds for receiving data from the socket
            Default: 600
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.SocketSendTimeout">
            <summary>
            Timeout in seconds for sending data to the socket
            Default: 600
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.IdleWorkerInterval">
            <summary>
            Interval in seconds to run the idle worker
            Default: 60
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.PingInterval">
            <summary>
            Interval in seconds to send a PING
            Default: 60
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.PingTimeout">
            <summary>
            Timeout in seconds for server response to a PING
            Default: 600
            </summary>
        </member>
        <member name="P:yIRC.IrcConnection.Lag">
            <summary>
            Latency between client and the server
            </summary>
        </member>
        <member name="T:yIRC.IrcConnection.ReadThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcConnection.ReadThread.#ctor(yIRC.IrcConnection)">
            <summary>
            
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:yIRC.IrcConnection.ReadThread.Start">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.IrcConnection.WriteThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcConnection.WriteThread.#ctor(yIRC.IrcConnection)">
            <summary>
            
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:yIRC.IrcConnection.WriteThread.Start">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.IrcConnection.IdleWorkerThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcConnection.IdleWorkerThread.#ctor(yIRC.IrcConnection)">
            <summary>
            
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:yIRC.IrcConnection.IdleWorkerThread.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcConnection.IdleWorkerThread.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.SendMessage(yIRC.SendType,System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="destination"></param>
            <param name="message"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.SendMessage(yIRC.SendType,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="destination"></param>
            <param name="message"></param>
        </member>
        <member name="M:yIRC.IrcCommands.SendReply(yIRC.IrcMessageData,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="message"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.SendReply(yIRC.IrcMessageData,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="message"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Op(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Op(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Deop(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Deop(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Voice(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Voice(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Devoice(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Devoice(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Ban(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Ban(System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Ban(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="hostmask"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Ban(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="hostmask"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Unban(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="hostmask"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Unban(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="hostmask"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Pass(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="password"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Pass(System.String)">
            <summary>
            
            </summary>
            <param name="password"></param>
        </member>
        <member name="M:yIRC.IrcCommands.User(System.String,System.Int32,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="username"></param>
            <param name="usermode"></param>
            <param name="realname"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.User(System.String,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="username"></param>
            <param name="usermode"></param>
            <param name="realname"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Oper(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="password"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Oper(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="password"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Privmsg(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="destination"></param>
            <param name="message"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Privmsg(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="destination"></param>
            <param name="message"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Notice(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="destination"></param>
            <param name="message"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Notice(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="destination"></param>
            <param name="message"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Join(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Join(System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Join(System.String[],yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Join(System.String[])">
            <summary>
            
            </summary>
            <param name="channels"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Join(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="key"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Join(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="key"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Join(System.String[],System.String[],yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="keys"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Join(System.String[],System.String[])">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="keys"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Part(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Part(System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Part(System.String[],yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Part(System.String[])">
            <summary>
            
            </summary>
            <param name="channels"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Part(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="partmessage"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Part(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="partmessage"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Part(System.String[],System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="partmessage"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Part(System.String[],System.String)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="partmessage"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String[],System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="nickname"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String[],System.String)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="nickname"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String,System.String[],yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nicknames"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nicknames"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String[],System.String[],yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="nicknames"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String[],System.String[])">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="nicknames"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String,System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
            <param name="comment"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
            <param name="comment"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String[],System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="nickname"></param>
            <param name="comment"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String[],System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="nickname"></param>
            <param name="comment"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String,System.String[],System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nicknames"></param>
            <param name="comment"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String,System.String[],System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="nicknames"></param>
            <param name="comment"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String[],System.String[],System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="nicknames"></param>
            <param name="comment"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kick(System.String[],System.String[],System.String)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="nicknames"></param>
            <param name="comment"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Motd(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Motd">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Motd(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Motd(System.String)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Lusers(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Lusers">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Lusers(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="mask"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Lusers(System.String)">
            <summary>
            
            </summary>
            <param name="mask"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Lusers(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="mask"></param>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Lusers(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="mask"></param>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Version(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Version">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Version(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Version(System.String)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Stats(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Stats">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Stats(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Stats(System.String)">
            <summary>
            
            </summary>
            <param name="query"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Stats(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Stats(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Links">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Links(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="servermask"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Links(System.String)">
            <summary>
            
            </summary>
            <param name="servermask"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Links(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="remoteserver"></param>
            <param name="servermask"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Links(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="remoteserver"></param>
            <param name="servermask"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Time(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Time">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Time(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Time(System.String)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Connect(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="targetserver"></param>
            <param name="port"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Connect(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="targetserver"></param>
            <param name="port"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Connect(System.String,System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="targetserver"></param>
            <param name="port"></param>
            <param name="remoteserver"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Connect(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="targetserver"></param>
            <param name="port"></param>
            <param name="remoteserver"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Trace(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Trace(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Trace(System.String)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Admin(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Admin">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Admin(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Admin(System.String)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Info(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Info">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Info(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Info(System.String)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Servlist(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Servlist">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Servlist(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="mask"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Servlist(System.String)">
            <summary>
            
            </summary>
            <param name="mask"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Servlist(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="mask"></param>
            <param name="type"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Servlist(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="mask"></param>
            <param name="type"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Squery(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="servicename"></param>
            <param name="servicetext"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Squery(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="servicename"></param>
            <param name="servicetext"></param>
        </member>
        <member name="M:yIRC.IrcCommands.List(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.List(System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
        </member>
        <member name="M:yIRC.IrcCommands.List(System.String[],yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.List(System.String[])">
            <summary>
            
            </summary>
            <param name="channels"></param>
        </member>
        <member name="M:yIRC.IrcCommands.List(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.List(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.List(System.String[],System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.List(System.String[],System.String)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Names(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Names(System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Names(System.String[],yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Names(System.String[])">
            <summary>
            
            </summary>
            <param name="channels"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Names(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Names(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Names(System.String[],System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Names(System.String[],System.String)">
            <summary>
            
            </summary>
            <param name="channels"></param>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Topic(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Topic(System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Topic(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="newtopic"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Topic(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="newtopic"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Mode(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Mode(System.String)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Mode(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="newmode"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Mode(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="newmode"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Service(System.String,System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="distribution"></param>
            <param name="info"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Service(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="distribution"></param>
            <param name="info"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Invite(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="channel"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Invite(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="channel"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Nick(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="newnickname"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Nick(System.String)">
            <summary>
            
            </summary>
            <param name="newnickname"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Who(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Who">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Who(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="mask"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Who(System.String)">
            <summary>
            
            </summary>
            <param name="mask"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Who(System.String,System.Boolean,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="mask"></param>
            <param name="ircop"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Who(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mask"></param>
            <param name="ircop"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whois(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="mask"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whois(System.String)">
            <summary>
            
            </summary>
            <param name="mask"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whois(System.String[],yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="masks"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whois(System.String[])">
            <summary>
            
            </summary>
            <param name="masks"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whois(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="mask"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whois(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="mask"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whois(System.String,System.String[],yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="masks"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whois(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="masks"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whowas(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whowas(System.String)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whowas(System.String[],yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nicknames"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whowas(System.String[])">
            <summary>
            
            </summary>
            <param name="nicknames"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whowas(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="count"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whowas(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="count"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whowas(System.String[],System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nicknames"></param>
            <param name="count"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whowas(System.String[],System.String)">
            <summary>
            
            </summary>
            <param name="nicknames"></param>
            <param name="count"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whowas(System.String,System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="count"></param>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whowas(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="count"></param>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whowas(System.String[],System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nicknames"></param>
            <param name="count"></param>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Whowas(System.String[],System.String,System.String)">
            <summary>
            
            </summary>
            <param name="nicknames"></param>
            <param name="count"></param>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kill(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="comment"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Kill(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="comment"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Ping(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="server"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Ping(System.String)">
            <summary>
            
            </summary>
            <param name="server"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Ping(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="server"></param>
            <param name="server2"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Ping(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="server"></param>
            <param name="server2"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Pong(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="server"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Pong(System.String)">
            <summary>
            
            </summary>
            <param name="server"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Pong(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="server"></param>
            <param name="server2"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Pong(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="server"></param>
            <param name="server2"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Away(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Away">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Away(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="awaytext"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Away(System.String)">
            <summary>
            
            </summary>
            <param name="awaytext"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Rehash">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Die">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Restart">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Summon(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Summon(System.String)">
            <summary>
            
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Summon(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Summon(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Summon(System.String,System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="target"></param>
            <param name="channel"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Summon(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="target"></param>
            <param name="channel"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Users(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Users">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Users(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Users(System.String)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Wallops(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="wallopstext"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Wallops(System.String)">
            <summary>
            
            </summary>
            <param name="wallopstext"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Userhost(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Userhost(System.String)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Userhost(System.String[],yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nicknames"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Userhost(System.String[])">
            <summary>
            
            </summary>
            <param name="nicknames"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Ison(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Ison(System.String)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Ison(System.String[],yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="nicknames"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Ison(System.String[])">
            <summary>
            
            </summary>
            <param name="nicknames"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Quit(yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Quit">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcCommands.Quit(System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="quitmessage"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.Quit(System.String)">
            <summary>
            
            </summary>
            <param name="quitmessage"></param>
        </member>
        <member name="M:yIRC.IrcCommands.ServerQuit(System.String,System.String,yIRC.Priority)">
            <summary>
            
            </summary>
            <param name="server"></param>
            <param name="comment"></param>
            <param name="priority"></param>
        </member>
        <member name="M:yIRC.IrcCommands.ServerQuit(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="server"></param>
            <param name="comment"></param>
        </member>
        <member name="M:yIRC.IrcClient.#ctor">
            <summary>
            This class manages the connection server and provides access to all the objects needed to send and receive messages.
            </summary>
        </member>
        <member name="M:yIRC.IrcClient.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:yIRC.IrcClient.Connect(System.String[],System.Int32)">
            <summary>
            Connection parameters required to establish an server connection.
            </summary>
            <param name="addresslist">The list of server hostnames.</param>
            <param name="port">The TCP port the server listens on.</param>
        </member>
        <member name="M:yIRC.IrcClient.Reconnect(System.Boolean,System.Boolean)">
            <overloads>
            Reconnects to the current server.
            </overloads>
            <param name="login">If the login data should be sent, after successful connect.</param>
            <param name="channels">If the channels should be rejoined, after successful connect.</param>
        </member>
        <member name="M:yIRC.IrcClient.Reconnect(System.Boolean)">
            <param name="login">If the login data should be sent, after successful connect.</param>
        </member>
        <member name="M:yIRC.IrcClient.Login(System.String[],System.String,System.Int32,System.String,System.String)">
            <summary>
            Login parameters required identify with server connection
            </summary>
            <remark>Login is used at the beginning of connection to specify the username, hostname and realName of a new user.</remark>
            <param name="nicklist">The users list of 'nick' names which may NOT contain spaces</param>
            <param name="realname">The users 'real' name which may contain space characters</param>
            <param name="usermode">A numeric mode parameter.  
              <remark>
                Set to 0 to recieve wallops and be invisible. 
                Set to 4 to be invisible and not receive wallops.
              </remark>
            </param>
            <param name="username">The user's machine logon name</param>        
            <param name="password">The optional password can and MUST be set before any attempt to register
             the connection is made.</param>        
        </member>
        <member name="M:yIRC.IrcClient.Login(System.String[],System.String,System.Int32,System.String)">
            <summary>
            Login parameters required identify with server connection
            </summary>
            <remark>Login is used at the beginning of connection to specify the username, hostname and realName of a new user.</remark>
            <param name="nicklist">The users list of 'nick' names which may NOT contain spaces</param>
            <param name="realname">The users 'real' name which may contain space characters</param>
            <param name="usermode">A numeric mode parameter.  
            Set to 0 to recieve wallops and be invisible. 
            Set to 4 to be invisible and not receive wallops.</param>        
            <param name="username">The user's machine logon name</param>        
        </member>
        <member name="M:yIRC.IrcClient.Login(System.String[],System.String,System.Int32)">
            <summary>
            Login parameters required identify with server connection
            </summary>
            <remark>Login is used at the beginning of connection to specify the username, hostname and realName of a new user.</remark>
            <param name="nicklist">The users list of 'nick' names which may NOT contain spaces</param>
            <param name="realname">The users 'real' name which may contain space characters</param>
            <param name="usermode">A numeric mode parameter.  
            Set to 0 to recieve wallops and be invisible. 
            Set to 4 to be invisible and not receive wallops.</param>        
        </member>
        <member name="M:yIRC.IrcClient.Login(System.String[],System.String)">
            <summary>
            Login parameters required identify with server connection
            </summary>
            <remark>Login is used at the beginning of connection to specify the username, hostname and realName of a new user.</remark>
            <param name="nicklist">The users list of 'nick' names which may NOT contain spaces</param>
            <param name="realname">The users 'real' name which may contain space characters</param> 
        </member>
        <member name="M:yIRC.IrcClient.Login(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Login parameters required identify with server connection
            </summary>
            <remark>Login is used at the beginning of connection to specify the username, hostname and realName of a new user.</remark>
            <param name="nick">The users 'nick' name which may NOT contain spaces</param>
            <param name="realname">The users 'real' name which may contain space characters</param>
            <param name="usermode">A numeric mode parameter.  
            Set to 0 to recieve wallops and be invisible. 
            Set to 4 to be invisible and not receive wallops.</param>        
            <param name="username">The user's machine logon name</param>        
            <param name="password">The optional password can and MUST be set before any attempt to register
             the connection is made.</param>   
        </member>
        <member name="M:yIRC.IrcClient.Login(System.String,System.String,System.Int32,System.String)">
            <summary>
            Login parameters required identify with server connection
            </summary>
            <remark>Login is used at the beginning of connection to specify the username, hostname and realName of a new user.</remark>
            <param name="nick">The users 'nick' name which may NOT contain spaces</param>
            <param name="realname">The users 'real' name which may contain space characters</param>
            <param name="usermode">A numeric mode parameter.  
            Set to 0 to recieve wallops and be invisible. 
            Set to 4 to be invisible and not receive wallops.</param>        
            <param name="username">The user's machine logon name</param>        
        </member>
        <member name="M:yIRC.IrcClient.Login(System.String,System.String,System.Int32)">
            <summary>
            Login parameters required identify with server connection
            </summary>
            <remark>Login is used at the beginning of connection to specify the username, hostname and realName of a new user.</remark>
            <param name="nick">The users 'nick' name which may NOT contain spaces</param>
            <param name="realname">The users 'real' name which may contain space characters</param>
            <param name="usermode">A numeric mode parameter.  
            Set to 0 to recieve wallops and be invisible. 
            Set to 4 to be invisible and not receive wallops.</param>        
        </member>
        <member name="M:yIRC.IrcClient.Login(System.String,System.String)">
            <summary>
            Login parameters required identify with server connection
            </summary>
            <remark>Login is used at the beginning of connection to specify the username, hostname and realName of a new user.</remark>
            <param name="nick">The users 'nick' name which may NOT contain spaces</param>
            <param name="realname">The users 'real' name which may contain space characters</param>
        </member>
        <member name="M:yIRC.IrcClient.IsMe(System.String)">
            <summary>
            Determine if a specifier nickname is you
            </summary>
            <param name="nickname">The users 'nick' name which may NOT contain spaces</param>
            <returns>True if nickname belongs to you</returns>
        </member>
        <member name="M:yIRC.IrcClient.IsJoined(System.String)">
            <summary>
            Determines if your nickname can be found in a specified channel
            </summary>
            <param name="channelname">The name of the channel you wish to query</param>
            <returns>True if you are found in channel</returns>
        </member>
        <member name="M:yIRC.IrcClient.IsJoined(System.String,System.String)">
            <summary>
            Determine if a specified nickname can be found in a specified channel
            </summary>
            <param name="channelname">The name of the channel you wish to query</param>
            <param name="nickname">The users 'nick' name which may NOT contain spaces</param>
            <returns>True if nickname is found in channel</returns>
        </member>
        <member name="M:yIRC.IrcClient.GetIrcUser(System.String)">
            <summary>
            Returns user information
            </summary>
            <param name="nickname">The users 'nick' name which may NOT contain spaces</param>
            <returns>IrcUser object of requested nickname</returns>
        </member>
        <member name="M:yIRC.IrcClient.GetChannelUser(System.String,System.String)">
            <summary>
            Returns extended user information including channel information
            </summary>
            <param name="channelname">The name of the channel you wish to query</param>
            <param name="nickname">The users 'nick' name which may NOT contain spaces</param>
            <returns>ChannelUser object of requested channelname/nickname</returns>
        </member>
        <member name="M:yIRC.IrcClient.GetChannel(System.String)">
            <summary>
            
            </summary>
            <param name="channelname">The name of the channel you wish to query</param>
            <returns>Channel object of requested channel</returns>
        </member>
        <member name="M:yIRC.IrcClient.GetChannels">
            <summary>
            Gets a list of all joined channels on server
            </summary>
            <returns>String array of all joined channel names</returns>
        </member>
        <member name="M:yIRC.IrcClient.GetChannelList(System.String)">
            <summary>
            Fetches a fresh list of all available channels that match the passed mask
            </summary>
            <returns>List of ListInfo</returns>
        </member>
        <member name="M:yIRC.IrcClient.GetWhoList(System.String)">
            <summary>
            Fetches a fresh list of users that matches the passed mask
            </summary>
            <returns>List of ListInfo</returns>
        </member>
        <member name="M:yIRC.IrcClient.GetBanList(System.String)">
            <summary>
            Fetches a fresh ban list of the specified channel
            </summary>
            <returns>List of ListInfo</returns>
        </member>
        <member name="M:yIRC.IrcClient.MessageParser(System.String)">
            <summary>
            
            </summary>
            <param name="rawline"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.IrcClient.CreateIrcUser(System.String)">
            <summary>
            
            </summary>
            <param name="nickname"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.IrcClient.CreateChannel(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.IrcClient.CreateChannelUser(System.String,yIRC.IrcUser)">
            <summary>
            
            </summary>
            <param name="channel"></param>
            <param name="ircUser"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.IrcClient._NextNickname">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.IrcClient._RemoveIrcUser(System.String)">
            <summary>
            Removes a specified user from all channel lists
            </summary>
            <param name="nickname">The users 'nick' name which may NOT contain spaces</param>
        </member>
        <member name="M:yIRC.IrcClient._RemoveChannelUser(System.String,System.String)">
            <summary>
            Removes a specified user from a specified channel list
            </summary>
            <param name="channelname">The name of the channel you wish to query</param>
            <param name="nickname">The users 'nick' name which may NOT contain spaces</param>
        </member>
        <member name="M:yIRC.IrcClient._InterpretChannelMode(yIRC.IrcMessageData,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ircdata">Message data containing channel mode information</param>
            <param name="mode">Channel mode</param>
            <param name="parameter">List of supplied paramaters</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_PING(yIRC.IrcMessageData)">
            <summary>
            Event handler for ping messages
            </summary>
            <param name="ircdata">Message data containing ping information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_PONG(yIRC.IrcMessageData)">
            <summary>
            Event handler for PONG messages
            </summary>
            <param name="ircdata">Message data containing pong information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_ERROR(yIRC.IrcMessageData)">
            <summary>
            Event handler for error messages
            </summary>
            <param name="ircdata">Message data containing error information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_JOIN(yIRC.IrcMessageData)">
            <summary>
            Event handler for join messages
            </summary>
            <param name="ircdata">Message data containing join information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_PART(yIRC.IrcMessageData)">
            <summary>
            Event handler for part messages
            </summary>
            <param name="ircdata">Message data containing part information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_KICK(yIRC.IrcMessageData)">
            <summary>
            Event handler for kick messages
            </summary>
            <param name="ircdata">Message data containing kick information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_QUIT(yIRC.IrcMessageData)">
            <summary>
            Event handler for quit messages
            </summary>
            <param name="ircdata">Message data containing quit information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_PRIVMSG(yIRC.IrcMessageData)">
            <summary>
            Event handler for private messages
            </summary>
            <param name="ircdata">Message data containing private message information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_NOTICE(yIRC.IrcMessageData)">
            <summary>
            Event handler for notice messages
            </summary>
            <param name="ircdata">Message data containing notice information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_TOPIC(yIRC.IrcMessageData)">
            <summary>
            Event handler for topic messages
            </summary>
            <param name="ircdata">Message data containing topic information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_NICK(yIRC.IrcMessageData)">
            <summary>
            Event handler for nickname messages
            </summary>
            <param name="ircdata">Message data containing nickname information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_INVITE(yIRC.IrcMessageData)">
            <summary>
            Event handler for invite messages
            </summary>
            <param name="ircdata">Message data containing invite information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_MODE(yIRC.IrcMessageData)">
            <summary>
            Event handler for mode messages
            </summary>
            <param name="ircdata">Message data containing mode information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_RPL_CHANNELMODEIS(yIRC.IrcMessageData)">
            <summary>
            Event handler for channel mode reply messages
            </summary>
            <param name="ircdata">Message data containing reply information</param>
        </member>
        <member name="M:yIRC.IrcClient._Event_RPL_WELCOME(yIRC.IrcMessageData)">
            <summary>
            Event handler for welcome reply messages
            </summary>
            <remark>
            Upon success, the client will receive an RPL_WELCOME (for users) or
            RPL_YOURESERVICE (for services) message indicating that the
            connection is now registered and known the to the entire IRC network.
            The reply message MUST contain the full client identifier upon which
            it was registered.
            </remark>
            <param name="ircdata">Message data containing reply information</param>
        </member>
        <member name="E:yIRC.IrcClient.OnRegistered">
            <event cref="E:yIRC.IrcClient.OnRegistered">
            Event handler for welcome reply messages
            <remark>
            Upon success, the client will receive a message indicating that the
            connection is now registered and known to the entire IRC network.
            </remark>
            </event>       
        </member>
        <member name="E:yIRC.IrcClient.OnPing">
            <summary>
            Event handler for ping messages
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnPong">
            <summary>
            Event handler for PONG messages
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnRawMessage">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnError">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnErrorMessage">
            <summary>
            Event handler for error messages
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnJoin">
            <summary>
            Event handler for join messages
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnNames">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnList">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnPart">
            <summary>
            Event handler for part messages
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnQuit">
            <summary>
            Event handler for quit messages
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnKick">
            <summary>
            Event handler for kick messages
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnAway">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnUnAway">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnNowAway">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnInvite">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnBan">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnUnban">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnOp">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnDeop">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnVoice">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnDevoice">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnWho">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnMotd">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnTopic">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnTopicChange">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnNickChange">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnModeChange">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnUserModeChange">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnChannelModeChange">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnChannelMessage">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnChannelAction">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnChannelNotice">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnChannelActiveSynced">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnChannelPassiveSynced">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnQueryMessage">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnQueryAction">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnQueryNotice">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnCtcpRequest">
            <summary>
            
            </summary>
        </member>
        <member name="E:yIRC.IrcClient.OnCtcpReply">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.ActiveChannelSyncing">
            <summary>
            Enables/disables the active channel sync feature.
            Default: false
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.CtcpVersion">
            <summary>
            Sets the ctcp version that should be replied on ctcp version request.
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.AutoJoinOnInvite">
            <summary>
            Enables/disables auto joining of channels when invited.
            Default: false
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.AutoRejoin">
            <summary>
            Enables/disables automatic rejoining of channels when a connection to the server is lost.
            Default: false
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.AutoRejoinOnKick">
            <summary>
            Enables/disables auto rejoining of channels when kicked.
            Default: false
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.AutoRelogin">
            <summary>
            Enables/disables auto relogin to the server after a reconnect.
            Default: false
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.AutoNickHandling">
            <summary>
            Enables/disables auto nick handling on nick collisions
            Default: true
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.Nickname">
            <summary>
            Gets the nickname of us.
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.NicknameList">
            <summary>
            Gets the list of nicknames of us.
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.Realname">
            <summary>
            Gets the supposed real name of us.
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.Username">
            <summary>
            Gets the username for the server.
            </summary>
            <remarks>
            System username is set by default 
            </remarks>
        </member>
        <member name="P:yIRC.IrcClient.Usermode">
            <summary>
            Gets the alphanumeric mode mask of us.
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.IUsermode">
            <summary>
            Gets the numeric mode mask of us.
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.IsAway">
            <summary>
            Returns if we are away on this connection
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.Password">
            <summary>
            Gets the password for the server.
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.JoinedChannels">
            <summary>
            Gets the list of channels we are joined.
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.GetMotd">
            <summary>
            Gets the server message of the day.
            </summary>
        </member>
        <member name="P:yIRC.IrcClient.BanListSyncRoot">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.IrcMessageData">
            <summary>
            This class contains an IRC message in a parsed form
            </summary>
            <threadsafety static="true" instance="true" />
        </member>
        <member name="M:yIRC.IrcMessageData.#ctor(yIRC.IrcClient,System.String,System.String,System.String,System.String,System.String,System.String,System.String,yIRC.ReceiveType,yIRC.ReplyCode)">
            <summary>
            Constructor to create an instace of IrcMessageData
            </summary>
            <param name="ircClient">IrcClient the message originated from</param>
            <param name="from">combined nickname, identity and host of the user that sent the message (nick!ident@host)</param>
            <param name="nick">nickname of the user that sent the message</param>
            <param name="ident">identity (username) of the userthat sent the message</param>
            <param name="host">hostname of the user that sent the message</param>
            <param name="channel">channel the message originated from</param>
            <param name="message">message</param>
            <param name="rawmessage">raw message sent by the server</param>
            <param name="type">message type</param>
            <param name="replycode">message reply code</param>
        </member>
        <member name="P:yIRC.IrcMessageData.Irc">
            <summary>
            Gets the IrcClient object the message originated from
            </summary>
        </member>
        <member name="P:yIRC.IrcMessageData.From">
            <summary>
            Gets the combined nickname, identity and hostname of the user that sent the message
            </summary>
            <example>
            nick!ident@host
            </example>
        </member>
        <member name="P:yIRC.IrcMessageData.Nick">
            <summary>
            Gets the nickname of the user that sent the message
            </summary>
        </member>
        <member name="P:yIRC.IrcMessageData.Ident">
            <summary>
            Gets the identity (username) of the user that sent the message
            </summary>
        </member>
        <member name="P:yIRC.IrcMessageData.Host">
            <summary>
            Gets the hostname of the user that sent the message
            </summary>
        </member>
        <member name="P:yIRC.IrcMessageData.Channel">
            <summary>
            Gets the channel the message originated from
            </summary>
        </member>
        <member name="P:yIRC.IrcMessageData.Message">
            <summary>
            Gets the message
            </summary>
        </member>
        <member name="P:yIRC.IrcMessageData.MessageArray">
            <summary>
            Gets the message as an array of strings (splitted by space)
            </summary>
        </member>
        <member name="P:yIRC.IrcMessageData.RawMessage">
            <summary>
            Gets the raw message sent by the server
            </summary>
        </member>
        <member name="P:yIRC.IrcMessageData.RawMessageArray">
            <summary>
            Gets the raw message sent by the server as array of strings (splitted by space)
            </summary>
        </member>
        <member name="P:yIRC.IrcMessageData.Type">
            <summary>
            Gets the message type
            </summary>
        </member>
        <member name="P:yIRC.IrcMessageData.ReplyCode">
            <summary>
            Gets the message reply code
            </summary>
        </member>
        <member name="T:yIRC.IrcUser">
            <summary>
            This class manages the user information.
            </summary>
            <remarks>
            only used with channel sync
            <seealso cref="P:yIRC.IrcClient.ActiveChannelSyncing">
              IrcClient.ActiveChannelSyncing
            </seealso>
            </remarks>
            <threadsafety static="true" instance="true"/>
        </member>
        <member name="P:yIRC.IrcUser.Nick">
            <summary>
            Gets or sets the nickname of the user.
            </summary>
        </member>
        <member name="P:yIRC.IrcUser.Ident">
            <summary>
            Gets or sets the identity (username) of the user which is used by some IRC networks for authentication. 
            </summary>
        </member>
        <member name="P:yIRC.IrcUser.Host">
            <summary>
            Gets or sets the hostname of the user. 
            </summary>
        </member>
        <member name="P:yIRC.IrcUser.Realname">
            <summary>
            Gets or sets the supposed real name of the user.
            </summary>
        </member>
        <member name="P:yIRC.IrcUser.IsIrcOp">
            <summary>
            Gets or sets the server operator status of the user
            </summary>
        </member>
        <member name="P:yIRC.IrcUser.IsAway">
            <summary>
            Gets or sets away status of the user
            </summary>
        </member>
        <member name="P:yIRC.IrcUser.Server">
            <summary>
            Gets or sets the server the user is connected to
            </summary>
        </member>
        <member name="P:yIRC.IrcUser.HopCount">
            <summary>
            Gets or sets the count of hops between you and the user's server
            </summary>
        </member>
        <member name="P:yIRC.IrcUser.JoinedChannels">
            <summary>
            Gets the list of channels the user has joined
            </summary>
        </member>
        <member name="T:yIRC.WhoInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:yIRC.WhoInfo.Parse(yIRC.IrcMessageData)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="P:yIRC.WhoInfo.Channel">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.WhoInfo.Ident">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.WhoInfo.Host">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.WhoInfo.Server">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.WhoInfo.Nick">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.WhoInfo.HopCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.WhoInfo.Realname">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.WhoInfo.IsAway">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.WhoInfo.IsOp">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.WhoInfo.IsVoice">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.WhoInfo.IsIrcOp">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.Rfc2812">
             <summary>
            
             </summary>
             <threadsafety static="true" instance="true" />
        </member>
        <member name="M:yIRC.Rfc2812.IsValidNickname(System.String)">
             <summary>
             Checks if the passed nickname is valid according to the RFC
            
             Use with caution, many IRC servers are not conform with this!
             </summary>
        </member>
        <member name="M:yIRC.Rfc2812.Pass(System.String)">
            <summary>
            Sets a connection password. This command must be sent before the NICK/USER registration combination.
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Nick(System.String)">
            <summary>
            Allows a client to change their IRC nickname.
            </summary>
            <param name="nickname">Nickname to set</param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.User(System.String,System.Int32,System.String)">
            <summary>
            This command is used at the beginning of a connection to specify the username, hostname, real name and initial user modes of the connecting client.
            </summary>
            <param name="username"></param>
            <param name="usermode"></param>
            <param name="realname">May contain spaces, and thus must be prefixed with a colon</param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Oper(System.String,System.String)">
            <summary>
            Authenticates a user as an IRC operator on that server/network.
            </summary>
            <param name="name"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Privmsg(System.String,System.String)">
            <summary>
            Sends message to destination, which is usually a user or channel.
            </summary>
            <param name="destination"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Notice(System.String,System.String)">
            <summary>
            This command works similarly to PRIVMSG, except automatic replies must never be sent in reply to NOTICE messages.
            </summary>
            <param name="destination"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Join(System.String)">
            <summary>
            Makes the client join the channels in the comma-separated list, specifying the passwords, if needed, in the comma-separated list. If the channel(s) do not exist then they will be created.
            </summary>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Join(System.String[])">
            <summary>
            Makes the client join the channels in the comma-separated list, specifying the passwords, if needed, in the comma-separated list. If the channel(s) do not exist then they will be created.
            </summary>
            <param name="channels"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Join(System.String,System.String)">
            <summary>
            Makes the client join the channels in the comma-separated list, specifying the passwords, if needed, in the comma-separated list. If the channel(s) do not exist then they will be created.
            </summary>
            <param name="channel"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Join(System.String[],System.String[])">
            <summary>
            Makes the client join the channels in the comma-separated list, specifying the passwords, if needed, in the comma-separated list. If the channel(s) do not exist then they will be created.
            </summary>
            <param name="channels"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Part(System.String)">
            <summary>
            Causes a user to leave the channels.
            </summary>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Part(System.String[])">
            <summary>
            Causes a user to leave the channels.
            </summary>
            <param name="channels"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Part(System.String,System.String)">
            <summary>
            Causes a user to leave the channels. With a part message.
            </summary>
            <param name="channel"></param>
            <param name="partmessage"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Part(System.String[],System.String)">
            <summary>
            Causes a user to leave the channels. With a part message.
            </summary>
            <param name="channels"></param>
            <param name="partmessage"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Kick(System.String,System.String)">
            <summary>
            Forcibly removes client from channel. This command may only be issued by channel operators.
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Kick(System.String,System.String,System.String)">
            <summary>
            Forcibly removes client from channel. This command may only be issued by channel operators.
            </summary>
            <param name="channel"></param>
            <param name="nickname"></param>
            <param name="comment"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Kick(System.String[],System.String)">
            <summary>
            Forcibly removes client from channel. This command may only be issued by channel operators.
            </summary>
            <param name="channels"></param>
            <param name="nickname"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Kick(System.String[],System.String,System.String)">
            <summary>
            Forcibly removes client from channel. This command may only be issued by channel operators.
            </summary>
            <param name="channels"></param>
            <param name="nickname"></param>
            <param name="comment"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Kick(System.String,System.String[])">
            <summary>
            Forcibly removes client from channel. This command may only be issued by channel operators.
            </summary>
            <param name="channel"></param>
            <param name="nicknames"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Kick(System.String,System.String[],System.String)">
            <summary>
            Forcibly removes client from channel. This command may only be issued by channel operators.
            </summary>
            <param name="channel"></param>
            <param name="nicknames"></param>
            <param name="comment"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Kick(System.String[],System.String[])">
            <summary>
            Forcibly removes client from channel. This command may only be issued by channel operators.
            </summary>
            <param name="channels"></param>
            <param name="nicknames"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Kick(System.String[],System.String[],System.String)">
            <summary>
            Forcibly removes client from channel. This command may only be issued by channel operators.
            </summary>
            <param name="channels"></param>
            <param name="nicknames"></param>
            <param name="comment"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Motd">
            <summary>
            Returns the message of the day on server or the current server if it is omitted
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Motd(System.String)">
            <summary>
            Returns the message of the day on server or the current server if it is omitted
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Lusers">
            <summary>
            Returns statistics about the size of the network. 
            If called with no arguments, the statistics will reflect the entire network. 
            If mask is given, it will return only statistics reflecting the masked subset of the network. 
            If target is given, the command will be forwarded to server for evaluation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Lusers(System.String)">
            <summary>
            Returns statistics about the size of the network. 
            If called with no arguments, the statistics will reflect the entire network. 
            If mask is given, it will return only statistics reflecting the masked subset of the network. 
            If target is given, the command will be forwarded to server for evaluation.
            </summary>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Lusers(System.String,System.String)">
            <summary>
            Returns statistics about the size of the network. 
            If called with no arguments, the statistics will reflect the entire network. 
            If mask is given, it will return only statistics reflecting the masked subset of the network. 
            If target is given, the command will be forwarded to server for evaluation.
            </summary>
            <param name="mask"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Version">
            <summary>
            Returns the version of server, or the current server if omitted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Version(System.String)">
            <summary>
            Returns the version of server, or the current server if omitted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Stats">
            <summary>
            Returns statistics about the current server, or server if it's specified.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Stats(System.String)">
            <summary>
            Returns statistics about the current server, or server if it's specified.
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Stats(System.String,System.String)">
            <summary>
            Returns statistics about the current server, or server if it's specified.
            </summary>
            <param name="query"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Links">
            <summary>
            Lists all server links matching server mask, if given, on remote server, or the current server if omitted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Links(System.String)">
            <summary>
            Lists all server links matching server mask, if given, on remote server, or the current server if omitted.
            </summary>
            <param name="servermask"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Links(System.String,System.String)">
            <summary>
            Lists all server links matching server mask, if given, on remote server, or the current server if omitted.
            </summary>
            <param name="remoteserver"></param>
            <param name="servermask"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Time">
            <summary>
            Returns the local time on the current server, or server if specified
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Time(System.String)">
            <summary>
            Returns the local time on the current server, or server if specified
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Connect(System.String,System.String)">
            <summary>
            Instructs the server remote server (or the current server, if target server is omitted) to connect to target server on port port. This command should only be available to IRC Operators.
            </summary>
            <param name="targetserver"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Connect(System.String,System.String,System.String)">
            <summary>
            Instructs the server remote server (or the current server, if target server is omitted) to connect to target server on port port. This command should only be available to IRC Operators.
            </summary>
            <param name="targetserver"></param>
            <param name="port"></param>
            <param name="remoteserver"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Trace">
            <summary>
            Trace a path across the IRC network to a specific server or client, in a similar method to traceroute.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Trace(System.String)">
            <summary>
            Trace a path across the IRC network to a specific server or client, in a similar method to traceroute.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Admin">
            <summary>
            Instructs the server to return information about the administrator of the server specified by server, or the current server if target is omitted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Admin(System.String)">
            <summary>
            Instructs the server to return information about the administrator of the server specified by server, or the current server if target is omitted.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Info">
            <summary>
            Returns information about the target server, or the current server if target is omitted.
            Information returned includes the server's version, when it was compiled, the patch level, when it was started, and any other information 
            which may be considered to be relevant.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Info(System.String)">
            <summary>
            Returns information about the target server, or the current server if target is omitted.
            Information returned includes the server's version, when it was compiled, the patch level, when it was started, and any other information 
            which may be considered to be relevant.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Servlist">
            <summary>
            Lists the services currently on the network.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Servlist(System.String)">
            <summary>
            Lists the services currently on the network.
            </summary>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Servlist(System.String,System.String)">
            <summary>
            Lists the services currently on the network.
            </summary>
            <param name="mask"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Squery(System.String,System.String)">
            <summary>
            Identical to PRIVMSG except the recipient must be a service.
            </summary>
            <param name="servicename"></param>
            <param name="servicetext"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.List">
            <summary>
            Lists all channels on the server. If the channels list is given, it will return the channel topics. 
            If server is given, the command will be forwarded to server for evaluation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.List(System.String)">
            <summary>
            Lists all channels on the server. If the channels list is given, it will return the channel topics. 
            If server is given, the command will be forwarded to server for evaluation.
            </summary>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.List(System.String[])">
            <summary>
            Lists all channels on the server. If the channels list is given, it will return the channel topics. 
            If server is given, the command will be forwarded to server for evaluation.
            </summary>
            <param name="channels"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.List(System.String,System.String)">
            <summary>
            Lists all channels on the server. If the channels list is given, it will return the channel topics. 
            If server is given, the command will be forwarded to server for evaluation.
            </summary>
            <param name="channel"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.List(System.String[],System.String)">
            <summary>
            Lists all channels on the server. If the channels list is given, it will return the channel topics. 
            If server is given, the command will be forwarded to server for evaluation.
            </summary>
            <param name="channels"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Names">
            <summary>
            Returns a list of who is on the list of channels, by channel name. 
            If channels is omitted, all users are shown, grouped by channel name with all users who are not on a channel being shown as part of channel "*". 
            If server is specified, the command is sent to server for evaluation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Names(System.String)">
            <summary>
            Returns a list of who is on the list of channels, by channel name. 
            If channels is omitted, all users are shown, grouped by channel name with all users who are not on a channel being shown as part of channel "*". 
            If server is specified, the command is sent to server for evaluation.
            </summary>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Names(System.String[])">
            <summary>
            Returns a list of who is on the list of channels, by channel name. 
            If channels is omitted, all users are shown, grouped by channel name with all users who are not on a channel being shown as part of channel "*". 
            If server is specified, the command is sent to server for evaluation.
            </summary>
            <param name="channels"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Names(System.String,System.String)">
            <summary>
            Returns a list of who is on the list of channels, by channel name. 
            If channels is omitted, all users are shown, grouped by channel name with all users who are not on a channel being shown as part of channel "*". 
            If server is specified, the command is sent to server for evaluation.
            </summary>
            <param name="channel"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Names(System.String[],System.String)">
            <summary>
            Returns a list of who is on the list of channels, by channel name. 
            If channels is omitted, all users are shown, grouped by channel name with all users who are not on a channel being shown as part of channel "*". 
            If server is specified, the command is sent to server for evaluation.
            </summary>
            <param name="channels"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Topic(System.String)">
            <summary>
            Allows the client to query or set the channel topic on channel. 
            If topic is given, it sets the channel topic to topic. 
            If channel mode +t is set, only a channel operator may set the topic.
            </summary>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Topic(System.String,System.String)">
            <summary>
            Allows the client to query or set the channel topic on channel. 
            If topic is given, it sets the channel topic to topic. 
            If channel mode +t is set, only a channel operator may set the topic.
            </summary>
            <param name="channel"></param>
            <param name="newtopic"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Mode(System.String)">
            <summary>
            The MODE command is dual-purpose. It can be used to set both user and channel modes
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Mode(System.String,System.String)">
            <summary>
            The MODE command is dual-purpose. It can be used to set both user and channel modes
            </summary>
            <param name="target"></param>
            <param name="newmode"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Service(System.String,System.String,System.String)">
            <summary>
            Registers a new service on the network.
            </summary>
            <param name="nickname"></param>
            <param name="distribution"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Invite(System.String,System.String)">
            <summary>
            Invites nickname to the channel channel. 
            Channel does not have to exist, but if it does, only members of the channel are allowed to invite other clients. 
            If the channel mode i is set, only channel operators may invite other clients.
            </summary>
            <param name="nickname"></param>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Who">
            <summary>
            Returns a list of users who match mask. 
            If the flag ircop is given, the server will only return information about IRC Operators
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Who(System.String)">
            <summary>
            Returns a list of users who match mask. 
            If the flag ircop is given, the server will only return information about IRC Operators
            </summary>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Who(System.String,System.Boolean)">
            <summary>
            Returns a list of users who match mask. 
            If the flag ircop is given, the server will only return information about IRC Operators
            </summary>
            <param name="mask"></param>
            <param name="ircop"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Whois(System.String)">
            <summary>
            Returns information about the list of nicknames masks nicknames. 
            If target is given, the command is forwarded to it for processing.
            </summary>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Whois(System.String[])">
            <summary>
            Returns information about the list of nicknames masks nicknames. 
            If target is given, the command is forwarded to it for processing.
            </summary>
            <param name="masks"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Whois(System.String,System.String)">
            <summary>
            Returns information about the list of nicknames masks nicknames. 
            If target is given, the command is forwarded to it for processing.
            </summary>
            <param name="target"></param>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Whois(System.String,System.String[])">
            <summary>
            Returns information about the list of nicknames masks nicknames. 
            If target is given, the command is forwarded to it for processing.
            </summary>
            <param name="target"></param>
            <param name="masks"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Whowas(System.String)">
            <summary>
            Used to return information about a nickname that is no longer in use (due to client disconnection, or nickname changes).
            If given, the server will return information from the last count times the nickname has been used. 
            If server is given, the command is forwarded to it for processing.
            </summary>
            <param name="nickname"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Whowas(System.String[])">
            <summary>
            Used to return information about a nickname that is no longer in use (due to client disconnection, or nickname changes).
            If given, the server will return information from the last count times the nickname has been used. 
            If server is given, the command is forwarded to it for processing.
            </summary>
            <param name="nicknames"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Whowas(System.String,System.String)">
            <summary>
            Used to return information about a nickname that is no longer in use (due to client disconnection, or nickname changes).
            If given, the server will return information from the last count times the nickname has been used. 
            If server is given, the command is forwarded to it for processing.
            </summary>
            <param name="nickname"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Whowas(System.String[],System.String)">
            <summary>
            Used to return information about a nickname that is no longer in use (due to client disconnection, or nickname changes).
            If given, the server will return information from the last count times the nickname has been used. 
            If server is given, the command is forwarded to it for processing.
            </summary>
            <param name="nicknames"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Whowas(System.String,System.String,System.String)">
            <summary>
            Used to return information about a nickname that is no longer in use (due to client disconnection, or nickname changes).
            If given, the server will return information from the last count times the nickname has been used. 
            If server is given, the command is forwarded to it for processing.
            </summary>
            <param name="nickname"></param>
            <param name="count"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Whowas(System.String[],System.String,System.String)">
            <summary>
            Used to return information about a nickname that is no longer in use (due to client disconnection, or nickname changes).
            If given, the server will return information from the last count times the nickname has been used. 
            If server is given, the command is forwarded to it for processing.
            </summary>
            <param name="nicknames"></param>
            <param name="count"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Kill(System.String,System.String)">
            <summary>
            Forcibly removes client from the network. This command may only be issued by IRC operators.
            </summary>
            <param name="nickname"></param>
            <param name="comment"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Ping(System.String)">
            <summary>
            Tests the presence of a connection. A PING message results in a PONG reply. 
            If server2 is specified, the message gets passed on to it.
            </summary>
            <param name="server"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Ping(System.String,System.String)">
            <summary>
            Tests the presence of a connection. A PING message results in a PONG reply. 
            If server2 is specified, the message gets passed on to it.
            </summary>
            <param name="server"></param>
            <param name="server2"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Pong(System.String)">
            <summary>
            This command is a reply to the PING command and works in much the same way.
            </summary>
            <param name="server"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Pong(System.String,System.String)">
            <summary>
            This command is a reply to the PING command and works in much the same way.
            </summary>
            <param name="server"></param>
            <param name="server2"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Error(System.String)">
            <summary>
            This command is for use by servers to report errors to other servers. 
            It is also used before terminating client connections.
            </summary>
            <param name="errormessage"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Away">
            <summary>
            Provides the server with a message to automatically send in reply to a PRIVMSG directed at the user, but not to a channel they are on.
            If awaytext is omitted, the away status is removed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Away(System.String)">
            <summary>
            Provides the server with a message to automatically send in reply to a PRIVMSG directed at the user, but not to a channel they are on.
            If awaytext is omitted, the away status is removed.
            </summary>
            <param name="awaytext"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Rehash">
            <summary>
            Causes the server to re-read and re-process its configuration file(s). 
            This command can only be sent by IRC Operators.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Die">
            <summary>
            Instructs the server to shut down.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Restart">
            <summary>
            Restarts a server. It may only be sent by IRC Operators.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Summon(System.String)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Summon(System.String,System.String)">
            <summary>
            Gives users who are on the same host as target server a message asking them to join IRC.
            </summary>
            <param name="user"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Summon(System.String,System.String,System.String)">
            <summary>
            Gives users who are on the same host as target server a message asking them to join IRC.
            </summary>
            <param name="user"></param>
            <param name="target"></param>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Users">
            <summary>
            Returns a list of users and information about those users in a format similar to the UNIX commands who, rusers and finger
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Users(System.String)">
            <summary>
            Returns a list of users and information about those users in a format similar to the UNIX commands who, rusers and finger
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Wallops(System.String)">
            <summary>
            Sends wallopstext to all operators connected to the server (RFC 1459), or all users with user mode 'w' set (RFC 2812)
            </summary>
            <param name="wallopstext"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Userhost(System.String)">
            <summary>
            Returns a list of information about the nicknames specified
            </summary>
            <param name="nickname"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Userhost(System.String[])">
            <summary>
            Returns a list of information about the nicknames specified
            </summary>
            <param name="nicknames"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Ison(System.String)">
            <summary>
            Queries the server to see if the clients in the nicknames list are currently on the network.
            The server returns only the nicknames that are on the network in a space-separated list. 
            If none of the clients are on the network the server returns an empty list.
            </summary>
            <param name="nickname"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Ison(System.String[])">
            <summary>
            Queries the server to see if the clients in the nicknames list are currently on the network.
            The server returns only the nicknames that are on the network in a space-separated list. 
            If none of the clients are on the network the server returns an empty list.
            </summary>
            <param name="nicknames"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Quit">
            <summary>
            Disconnects the user from the server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Quit(System.String)">
            <summary>
            Disconnects the user from the server.
            </summary>
            <param name="quitmessage"></param>
            <returns></returns>
        </member>
        <member name="M:yIRC.Rfc2812.Squit(System.String,System.String)">
            <summary>
            Causes server to quit the network
            </summary>
            <param name="server"></param>
            <param name="comment"></param>
            <returns></returns>
        </member>
        <member name="T:yIRC.ReadLineEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.WriteLineEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.AutoConnectErrorEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:yIRC.ReadLineEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.ReadLineEventArgs.Line">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.WriteLineEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:yIRC.WriteLineEventArgs.Line">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.AutoConnectErrorEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.AutoConnectErrorEventArgs.Exception">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.AutoConnectErrorEventArgs.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:yIRC.AutoConnectErrorEventArgs.Port">
            <summary>
            
            </summary>
        </member>
        <member name="T:yIRC.IrcTcpClient">
            <summary>
            Custom socket
            </summary>
            <threadsafety static="true" instance="true" />
        </member>
        <member name="M:yIRC.IrcTcpClient.#ctor(System.Int32,System.Int32)">
            <summary>
            Standart constructor
            </summary>
            <param name="sendTimeout">Send timeout in seconds</param>
            <param name="receiveTimeout">Receive timeout in seconds</param>
        </member>
        <member name="M:yIRC.IrcTcpClient.#ctor(System.Text.Encoding,System.Int32,System.Int32)">
            <summary>
             Extended consturctor with encoding support
            </summary>
            <param name="encoding">Data encoding</param>
            <param name="sendTimeout">Send timeout in seconds</param>
            <param name="receiveTimeout">Receive timeout in seconds</param>
        </member>
        <member name="M:yIRC.IrcTcpClient.Dispose">
            <summary>
            Close the socket and sispose object itself
            </summary>
        </member>
        <member name="M:yIRC.IrcTcpClient.ConnectRoutine(System.String,System.Int32)">
            <summary>
            Attempt a TCP socket connection to the given host over the given port
            </summary>
            <param name="hostName">The name of the host</param>
            <param name="portNumber">The port number to connect</param>
            <returns>A string representing the result of this connection attempt</returns>
        </member>
    </members>
</doc>
